# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jraffin <jraffin@student.42.fr>            +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/10/01 16:27:27 by jraffin           #+#    #+#              #
#    Updated: 2022/10/01 16:27:29 by jraffin          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

services:

  db:
    image: postgres:14.5-alpine
    container_name: db
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -d ${POSTGRES_DB:-postgresql_db_name} -U ${POSTGRES_USER:-postgresql_admin_username}"
        ]
      interval: 1s
      start_period: 10s
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - transcendence-network
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgresql_db_name}
      - POSTGRES_USER=${POSTGRES_USER:-postgresql_admin_username}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgresql_admin_password}

  back:
    build: ./back
    container_name: back
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${BACKEND_PORT:-3000}:${BACKEND_PORT:-3000}
    networks:
      - transcendence-network
    environment:
      - PORT=${BACKEND_PORT:-3000}
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-postgresql_db_name}
      - POSTGRES_USER=${POSTGRES_USER:-postgresql_admin_username}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgresql_admin_password}
      - API42_UID=${API42_UID:-42API_app_uid...}
      - API42_SECRET=${API42_SECRET:-42API_app_secret...}
      - REACT_APP_HOSTNAME=${HOSTNAME:-localhost}
      - REACT_APP_WEBSITE_PORT=${WEBSITE_PORT:-3080}
      - REACT_APP_BACKEND_PORT=${BACKEND_PORT:-3000}
      - REACT_APP_WEBSITE_URL=http://${HOSTNAME:-localhost}:${WEBSITE_PORT:-3080}/
      - REACT_APP_BACKEND_URL=http://${HOSTNAME:-localhost}:${BACKEND_PORT:-3000}/

  front:
    build: ./app
    container_name: front
    restart: always
    ports:
      - ${WEBSITE_PORT:-3080}:${WEBSITE_PORT:-3080}
    networks:
      - transcendence-network
    environment:
      - PORT=${WEBSITE_PORT:-3080}
      - REACT_APP_HOSTNAME=${HOSTNAME:-localhost}
      - REACT_APP_WEBSITE_PORT=${WEBSITE_PORT:-3080}
      - REACT_APP_BACKEND_PORT=${BACKEND_PORT:-3000}
      - REACT_APP_WEBSITE_URL=http://${HOSTNAME:-localhost}:${WEBSITE_PORT:-3080}/
      - REACT_APP_BACKEND_URL=http://${HOSTNAME:-localhost}:${BACKEND_PORT:-3000}/

  adminer:
    image: adminer:4.8.1-standalone
    container_name: adminer
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - ${ADMINER_PORT:-9000}:8080
    networks:
      - transcendence-network
    environment:
      - ADMINER_DEFAULT_SERVER=db

networks:
  transcendence-network:

volumes:
  db_data:
